//----------  button
//------------------------------------------------------------------------------
a,
button {
	appearance: none;
	outline: none;
	transition: $nbSec ease-in-out;
}

a {
	@include hover {
		text-decoration: none;
	}
}

button,
input[type='button'],
input[type='submit'] {
	background: none;
	border: 0;
	cursor: pointer;
	outline: none;
	padding: 0;
}

.uk-button {
	align-items: center;
	border-radius: 50px;
	border: 0;
	color: $white;
	display: inline-flex;
	font-size: 14px;
	font-weight: $bold;
	justify-content: space-between;
	line-height: 1.3em;
	padding: 15px 35px;
	text-align: left;
	text-transform: none;
	transition: $nbSec ease-in-out;

	* {
		transition: inherit;
	}

	&.uk-button-primary,
	&.uk-button-default,
	&.uk-button-secondary,
	&.uk-button-danger {
		border-radius: 50px;
	}

	&.uk-button-primary {
		background-color: $blue-light;
	}

	&.uk-button-secondary {
		background-color: $blue;
	}

	&.uk-button-danger {
		background-color: $red-danger-dark;
	}

	>span:last-of-type {
		align-items: center;
		display: inline-flex;
		margin-left: 15px;
		position: relative;

		&::after {
			background-color: $white;
			content: '';
			height: 1px;
			left: 0;
			position: absolute;
			top: 50%;
			transform: translateY(-50%);
			transition: .7s ease;
			width: 0;
		}

		svg {
			left: 0;
			position: relative;
			transition: .7s ease;
		}
	}

	&.button-back {
		>span {
			&:first-of-type {
				align-items: center;
				display: inline-flex;
				position: relative;

				&::after {
					background-color: $blue-light;
					content: '';
					height: 1px;
					position: absolute;
					right: 0;
					top: 50%;
					transform: translateY(-50%);
					transition: .7s ease;
					width: 0;
				}

				svg {
					position: relative;
					right: 0;
					transition: .7s ease;
				}

				.uk-svg:not(.uk-preserve) [fill*='#']:not(.uk-preserve) {
					fill: $blue-light;
				}
			}

			&:last-of-type::after {
				display: none;
			}
		}

		@include hover {
			>span:first-of-type {
				&::after {
					width: 18px;
				}

				svg {
					right: 18px;
				}
			}
		}
	}

	&.uk-button-small {
		padding: 9px 25px;

		>span:last-of-type {
			margin-left: 10px;
		}
	}

	&.uk-button-large {
		font-size: 16px;
		padding: 18px 40px;
	}

	@include hover {
		background-color: $blue-light-hover;

		>span:last-of-type {
			&::after {
				width: 18px;
			}

			svg {
				left: 18px;
			}
		}

		&.uk-button-danger {
			background-color: $red-danger-dark;
		}
	}
}

.uk-button-default {
	background-color: transparent;
	border: 2px solid $gray-cold;
	color: $blue;
	padding: 13px 33px;

	>span:last-of-type {
		&::after {
			background-color: $blue-light;
		}

		.uk-svg:not(.uk-preserve) [fill*='#']:not(.uk-preserve) {
			fill: $blue-light;
		}
	}

	&.uk-button-small {
		padding: 7px 23px;
	}

	&.uk-button-large {
		padding: 16px 38px;
	}

	@include hover {
		background-color: transparent;
		border-color: $gray-cold-hover;
	}
}

.uk-button-secondary {
	background-color: $blue;

	@include hover {
		background-color: $blue-hover;
	}
}

.uk-button-text {
	border-radius: 0;
	border: 0;
	color: $blue;
	min-height: 58px;
	min-width: auto;
	overflow: visible;
	padding: 0 55px 0 30px;
	position: relative;
	transition: .45s;

	&::before {
		display: none;
	}

	>span:last-of-type {
		&::after {
			background-color: $green-pastel;
		}

		.uk-svg,
		.uk-svg:not(.uk-preserve) [fill*='#']:not(.uk-preserve) {
			fill: $green-pastel;
		}
	}

	.uk-svg:not(.uk-preserve) [stroke*='#']:not(.uk-preserve) {
		fill: transparent;
		stroke: $gray-cold;
	}

	>svg {
		bottom: 0;
		fill: transparent;
		height: 100%;
		left: 0;
		overflow: visible;
		position: absolute;
		top: 0;
		width: 100%;
	}

	.shape {
		stroke-dasharray: 135 375;
		stroke-dashoffset: -745;
		stroke-width: 4px;
	}

	&.uk-button-large {
		padding: 0 30px;

		.shape {
			stroke-dashoffset: -757;
		}
	}

	@include hover {
		background-color: transparent;

		>span:last-of-type {
			&::after {
				width: 18px;
			}

			svg {
				left: 18px;
			}
		}

		.shape {
			animation: .35s drawShape 0s linear forwards;
		}
	}

	@media (min-width: $breakpointSmall) {
		&.uk-button-large {
			min-height: 62px;
			padding: 0 55px 0 30px;
		}
	}

	@media (max-width: $breakpointSmall) {
		&.uk-button-large {
			@include hover {
				span:last-of-type {
					&::after {
						width: 10px;
					}

					svg {
						left: 10px;
					}
				}
			}
		}
	}
}

.round-button {
	border-radius: 50%;
	border-style: solid;
	border-width: 2px;
	height: 48px;
	width: 48px;

	@media (min-width: $breakpointSmall) {
		height: 56px;
		width: 56px;
	}

	@media (max-width: $breakpointXsmallMax) {
		&.uk-slidenav {
			margin: 15px 10px;
		}
	}
}

.scroll-button-down {
	border-color: $white;
	display: inline-block;
	padding: 0;
	position: relative;
	z-index: 1;

	svg {
		fill: $white;
		width: 24px;
		left: 50%;
		position: absolute;
		top: 50%;
		transform: translate(-50%, -50%);
		transition: $nbSec ease-in-out;
	}

	@include hover {

		svg {
			transform: translate(-50%, -35%);
		}
	}
}

.scroll-button-up {
	z-index: 2;

	.uk-button {
		align-items: center;
		border-radius: 50%;
		border: 2px solid $blue;
		display: flex;
		height: 48px;
		justify-content: center;
		margin-bottom: 490px;
		padding: 0;
		width: 48px;
		z-index: 1;

		svg {
			fill: $blue;
			width: 16px;
			font-weight: normal;
		}

		&::after {
			display: none;
		}

		@include hover {
			background-color: $blue;

			svg {
				fill: $white;
			}
		}
	}

	@media (min-width: $breakpointSmall) {
		.uk-button {
			margin-right: 40px;
		}
	}

	@media (min-width: $breakpointLarge) {
		.uk-button {
			margin-right: 30px;
		}
	}

	@media (max-width: $breakpointXlarge) {
		.uk-button {
			margin-bottom: 540px;
		}
	}

	@media (max-width: $breakpointXsmallMax) {
		display: none;
	}
}

//sass-lint:disable no-vendor-prefixes
.download-button {
	--arrow: #fff;
	--background: #275efe;
	--checkmark: #fff;
	--rectangle: #184fee;
	--shadow: rgba(10, 22, 50, .24);
	--success: #{mix(#fff, #184fee, 20%)};
	--text: #fff;
	-webkit-mask-image: -webkit-radial-gradient(#fff, #000);
	background: var(--background);
	border-radius: 8px;
	box-shadow: 0 2px 8px -1px var(--shadow);
	display: flex;
	justify-content: space-between;
	overflow: hidden;
	text-decoration: none;
	transition: .2s ease;

	&:active {
		box-shadow: 0 1px 4px -1px var(--shadow);
		transform: scale(.95);
	}

	>.text {
		backface-visibility: hidden;
		color: var(--text);
		font-size: 16px;
		font-weight: 500;
		line-height: 28px;
		list-style: none;
		margin: 0;
		padding: 16px 40px;
		position: relative;
		text-align: center;

		>span {
			&:not(:first-child) {
				left: 0;
				position: absolute;
				right: 0;
				top: 16px;
			}

			&:nth-child(2) {
				top: 76px;
			}

			&:nth-child(3) {
				top: 136px;
			}
		}
	}

	>.icon {
		background: var(--rectangle);
		height: 60px;
		position: relative;
		width: 60px;

		&::before,
		&::after {
			content: '';
			display: block;
			position: absolute;
		}

		&::before {
			background: var(--arrow);
			border-radius: 1px;
			height: 17px;
			left: 50%;
			margin: -9px 0 0 -1px;
			top: 50%;
			width: 2px;
		}

		&::after {
			background: var(--success);
			border-radius: 0 0 80% 80%;
			height: 60px;
			left: 0;
			top: 0;
			transform-origin: 50% 0;
			transform: scaleY(0);
			width: 60px;
		}

		svg {
			display: block;
			fill: none;
			height: 20px;
			left: 50%;
			margin: -9px 0 0 -10px;
			position: absolute;
			stroke-linecap: round;
			stroke-linejoin: round;
			stroke-width: 2px;
			stroke: var(--arrow);
			top: 50%;
			width: 20px;
			z-index: 1;
		}
	}

	&.loading {
		>.text {
			animation: downloadText calc(var(--duration) * 1ms) linear forwards calc(var(--duration) * .065ms);
		}

		&>.icon {
			&::before {
				animation: downloadLine calc(var(--duration) * 1ms) linear forwards calc(var(--duration) * .065ms);
			}

			&::after {
				animation: downloadBackgroundChange calc(var(--duration) * 1ms) linear forwards calc(var(--duration) * .065ms);
			}

			svg {
				animation: downloadSvg calc(var(--duration) * 1ms) linear forwards calc(var(--duration) * .065ms);
			}
		}
	}
}

.button-sound {
	--duration: .5s;
	--line-width: 6px;
	--line: #fff;
	-webkit-tap-highlight-color: transparent;
	cursor: pointer;
	position: relative;


	svg {
		display: block;
		fill: none;
		height: auto;
		left: 50%;
		position: absolute;
		stroke-linecap: round;
		stroke-linejoin: round;
		stroke-width: var(--line-width);
		stroke: var(--line);
		top: 50%;
		transform: translate(-50%, -50%);
		width: 18px;

		path {
			animation: var(--name) var(--duration) ease forwards;

			&:nth-child(2) {
				stroke-dashoffset: 1px;
			}

			&:nth-child(3) {
				stroke-dashoffset: 1px;
			}
		}
	}

	&:not(.button-sound-active) {
		svg {
			path {
				&:nth-child(1) {
					--name: speakerShape;
				}

				&:nth-child(2) {
					--name: smallVolume;
				}

				&:nth-child(3) {
					--name: largeVolume;
				}
			}
		}
	}

	&.button-sound-active,
	&[data-uk-video~='automute: true'] {
		svg {
			path {
				&:nth-child(1) {
					--name: speakerShapeOn;
				}

				&:nth-child(2) {
					--name: smallVolumeOn;
				}

				&:nth-child(3) {
					--name: largeVolumeOn;
				}
			}
		}
	}
}

.button-video {
	$color: $white;
	$duration: .4s;
	$highlight: darken($color, 10%);
	$sin: .866;
	$size: 18px;
	border-radius: 50%;
	border: $size * .1 solid $color;
	cursor: pointer;
	font-size: 0;
	text-align: center;
	white-space: nowrap;

	.left,
	.right,
	&::before {
		display: inline-block;
		transition-timing-function: cubic-bezier(1, 0, 0, 1);
		transition: border $duration, width $duration, height $duration, margin $duration ease;
		vertical-align: middle;
	}

	&::before {
		content: '';
		height: $size;
	}

	.left,
	.right {
		border-radius: 2px;
	}

	&.button-video-active {

		.left,
		.right {
			border-bottom: 0 solid transparent;
			border-left: $size * .33 solid $color;
			border-top: 0 solid transparent;
			height: $size * $sin;
			margin: 0;
		}

		.left {
			margin-right: 2px;
		}
	}

	&:not(.button-video-active) {
		$border: $size / 4;

		.left,
		.right {
			border-radius: 0;
		}

		.left {
			border-bottom: $border solid transparent;
			border-left: $size * $sin / 2 solid $color;
			border-top: $border solid transparent;
			height: $size + 1;
			margin-left: $size / 6;
		}

		.right {
			border-bottom: $border solid transparent;
			border-left: $size * $sin / 2 solid $color;
			border-top: $border solid transparent;
			height: 0;
			margin: 0;
		}
	}

	@include hover {
		border-color: $highlight;

		.left,
		.right {
			border-left-color: $highlight;
		}
	}
}

.dropdown-close-button {

	&::after {
		color: $blue;
		content: font-char($close);
		font-family: 'svgicons';
		font-size: 24px;
		transition: $nbSec ease-in-out;
	}

	@include hover {
		&::after {
			color: $green-pastel;
		}
	}
}
